trigger:
- main

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '62605ba1-8a95-4d43-8d55-6304abf49e67'

  # Function app name
  functionAppName: 'func-finance-manager-api'

  # Agent VM image name
  vmImageName: 'windows-latest'

  # Working Directory
  workingDirectory: '$(System.DefaultWorkingDirectory)/FinanceManager.API/FinanceManager.API'

stages:
- stage: Build
  displayName: Build stage

  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: NuGetCommand@2
      displayName: Nuget Restore
      inputs:
        command: 'restore'
        restoreSolution: '**/*.sln'
        feedsToUse: 'select'

    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: 'build'
        projects: |
          $(workingDirectory)/*.csproj
        arguments: --output $(System.DefaultWorkingDirectory)/publish_output --configuration Release

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/publish_output'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

- stage: Publish
  displayName: Publish nuget packages stage
  dependsOn: Build
  condition: succeeded()

  jobs:
    - job: Publish
      pool:
        vmImage: $(vmImageName)
      
      steps:
        - task: PublishSymbols@2
          inputs:
            SearchPattern: '**/bin/**/*.pdb'
            SymbolServerType: 'TeamServices'
        
        - task: DotNetCoreCLI@2
          displayName: .NET Pack
          inputs:
            command: 'pack'
            arguments: '--configuration Release'
            packagesToPack: '**/*.csproj'
            versioningScheme: 'off' 
        
        - task: NuGetCommand@2
          inputs:
            command: 'push'
            packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
            nuGetFeedType: 'internal'
            publishVstsFeed: '1a25dfbf-cdeb-4ed3-883b-2b6f02fce11e'
            allowPackageConflicts: true
            versioningScheme: 'off'

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()

  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: 'development'
    pool:
      vmImage: $(vmImageName)

    strategy:
      runOnce:
        deploy:

          steps:
          - task: AzureFunctionApp@1
            displayName: 'Azure functions app deploy'
            inputs:
              azureSubscription: '$(azureSubscription)'
              appType: functionApp
              appName: $(functionAppName)
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'